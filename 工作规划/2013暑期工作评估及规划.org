* DONE Finish LASAT DSM V DTIPS ranking experiment report[13/13]
** DONE 1. compare the ranking of DSM and DTIPS
   CLOSED: [2013-07-24 Wed 11:19]
   - CLOSING NOTE [2013-07-24 Wed 11:19]
modify configure file to run DSM once and get the DSM ranking results
modify configure file to run DTIPS with bin number from 1 to 5 and get the DTIPS ranking results
** DONE 2. analyze results and compare with expected results[10/10]
*** DONE compare the ranking of DSM and DTIPS with linear regression[2/2]
**** DONE method
     CLOSED: [2013-07-24 Wed 14:03]
     - CLOSING NOTE [2013-07-24 Wed 14:03] \\
       finish
choose patterns that fit 5% p value cutoff, rank them in i-support and information gain.
Then compare these ranking with linear regression.
trend picture
linear regression picture
**** DONE conclusion
     CLOSED: [2013-07-24 Wed 14:03]
     - CLOSING NOTE [2013-07-24 Wed 14:03] \\
       finish
IG ranking coorelate with i-support ranking
The coorelation result is: 0.8
IG rank high, i-support high.
*** DONE Why should we use DTIPS[5/5]
    CLOSED: [2013-07-24 Wed 14:02]
    - CLOSING NOTE [2013-07-24 Wed 14:02] \\
      finish
Why should we use DTIPS when we already have DSM.
DSM focus on pattern total usage and DTIPS focus on pattern usage over time.
I divide patterns into 9 groups with DSM and DTIPS ranking(High, Medial, Low).
p-value V information gain
What I expected:
**** DONE HH,HM,MH
     CLOSED: [2013-07-24 Wed 14:02]
     - CLOSING NOTE [2013-07-24 Wed 14:02] \\
       finish
(expect HH, HM, MH more than the others)
HH: the best patterns.these pattern can identify group both in usage in time and total usage
HM and MH: good patterns. can identify group in usage in time or in total usage, they are good in at least one
aspect and not bad in the other aspect.
**** DONE LH,HL
     CLOSED: [2013-07-24 Wed 14:02]
     - CLOSING NOTE [2013-07-24 Wed 14:02] \\
       finish
the patterns we should focus on.
LH or HL percentage high: 
<1> DSM and DTIPS are quit different. they rank pattern in totally different way.
<2> There are a lot of Patterns, which can indentify groups in total usage, can not indentify groups in usage over time.
but expect no more than HH and HM, MH.
**** DONE MM,ML,LM,LL
     CLOSED: [2013-07-24 Wed 14:02]
     - CLOSING NOTE [2013-07-24 Wed 14:02] \\
       finish
We don't care those patterns, which can't indentify groups clearly.
**** DONE how to choose cutoff
     CLOSED: [2013-07-24 Wed 14:02]
     - CLOSING NOTE [2013-07-24 Wed 14:02] \\
       finish
Divide DSM ranking into High, Medial, Low group, with p value cutoff in t test: 0.05, 0.2, 1.
(5% is the default cutoff, 0.2 may give us confidence but not too much)
Divide DTIPS ranking into High Medial, Low group, with information gain cutoff: 0.008, 0.003, 0. 
(I used histogram to show the information gain of DTIPS from bin1 to bin5, and choose information gain value
around top 20% and top 50%)
**** DONE the results and pictures
     CLOSED: [2013-07-24 Wed 14:02]
     - CLOSING NOTE [2013-07-24 Wed 14:02] \\
       finish
bin5
Low HL and L-H
high HH HM MH
this conclusion support the linear regression conclusion.
*** CANCELED bin groups(optinal)
    CLOSED: [2013-07-24 Wed 14:04]
    - CLOSING NOTE [2013-07-24 Wed 14:04] \\
      exclude from slide
How about we increase the bin number, which may increase the information gain.
expected HH,HM,MH increase, becasue we get more IG, we get more patterns, which can both indentify groups in 
total usage and usage over time.
expect HL and LH decrease, because we get more IG.
** DONE get data, picture,get conclusion and write report
   CLOSED: [2013-07-24 Wed 14:03]
   - CLOSING NOTE [2013-07-24 Wed 14:03] \\
     finish
see pic directory
* DONE notes[3/3]
** DONE study strategy
   CLOSED: [2013-07-27 Sat 21:26]
   - CLOSING NOTE [2013-07-27 Sat 21:26] \\
     finish
:NOTE:
目的，效果，和效果评估，重点，重要性，时间消耗和评估，时间分配
重点，期望效果，困难，效果和目标，长远目标，产出的价值，节点的分析
goal, expected goal, expected effect, important point, difficulty
主线：目前的重点，困难，要克服的困难，之间的关系，克服的方法和步骤，方法和步骤的理由，理由评估
效果的评估（总结），应当有什么总结，先选择干线，之后安排先后关系，方法，步骤，执行的规划。

工作的每一个阶段都要规划目的，效果，步骤和方法，评估+修改+细化每一个步骤，执行，总结+再规划

关键的基础知识，节点，和知识网络的构建，
理论分层和关系，用最短的时间了解和掌握更多的知识

包括写文章，计划，checklist 都要进行这种步骤。

30 分钟是一个很合理的工作时间。

一开始的规划目的，就用自觉和直接的想法。之后继续修改

困难是如何影响目标和效果的，要如何克服

收获和收获增益，评估学习的短期增益和长期增益

评估不要形式化，心算即可

科研能力不仅仅是工具，还包括资源

在线知识，什么是好的知识（概念，例子，上手快等），如何搜索知识，如何管理知识

ML 用笔写笔记，之后上传或者扫描到google blogger。目的是为了将来参考，理解基础的概念。

基础概念的理解，一定要自己写，就写目前的理解和这种理解应当如何发展。

想想SPM DSM DTIPS 在其他领域的应用，在编程习惯，网络安全。
重点是理解 DSM DTIPS 后面的统计学原理。
统计学在ML AI 上的应用。
想想 LASAT 用来扩展到其他的领域，加入更复杂的 action 定义。
LASAT 用来比较group 之间的行为，不仅仅是学习行为。（计算机后台行为，内存行为，磁盘行为）
主动性
排斥JAVA，就多想想和C的相似，和使用JAVA的目的。
:END:
** DONE Learning strategy
   CLOSED: [2013-07-27 Sat 21:26]
   - CLOSING NOTE [2013-07-27 Sat 21:26]
:NOTE:
What I want to know more
find difference in database.
The concepts
Are they any other people do such things and how
效果增益：可以控制和理解的概念，触类旁通的概念增加
why 讨厌 JAVA
JAVA 的缺点也不要忽视，但是有更好的选择么，没有，且没那么糟糕
JAVA 是计算机程序发展中的一个节点，不是终点，没有必要排斥这个概念，也没有必要神化这个概念。
只是让程序员可以使用更高级思想编程，思考和设计系统的一个工具。
程序语言是管理计算机系统的重要手段，但是不同的语言适合不同的应用，因为语言的抽象方法决定了适合的工作不是全部。
要提升计算机系统的性能和功能，就要使用高级的语言，加强复用和功能。
像一个不断追求好的，追求性能，简洁，高效的程序员一样思考，来理解各种进步。
任何程序语言，都要处理好数据和数据的处理，通讯和协调，资源的管理和回收。同时要考虑到维护，复用，升级。
编程方法和思想，总是随着计算机系统的进步和发展而变化的。
很多以为很重要的节点，学习的增益并不大，要仔细分析，就能大大提高效率。
学习 ML 之前要有一个expected goal 和方法。
既要理解计算机的过去，也要关注未来，计算机系统不是一成不变的，之前无法实现的想法，都可能便成现实。
选择学习增益更大的方向。
结论比分析更为重要。
conclusion is the most import part.
更换 PPT 模版。
:END:
** DONE agent programming
   CLOSED: [2013-07-27 Sat 21:26]
   - CLOSING NOTE [2013-07-27 Sat 21:26] \\
     finish
:NOTE:
1. Motivation(research purpose)
2. Domain characteristics
agent programming and orient object programming
3. Gaia conceptual framworks
4. Roles model(different agent -- company)
5. agent and its knowleage.
6. agent and perimission.
7. agent and ROS.
8. how to program with agents.
9. angent and system.
10. Interaction model
11. Protocol -- a pattern of Interaction
12. agent model can be useful in network programming
13. agent and its service model
14. agent (type, instant, service, protocol)
15. more complex than OO and parellel.
16. Acquaintance model.
17. implementation platform.
18. agent programming 最重要的不是这种行为，重要的是，能不能把 agent 做为编程的核心和主要概念。这种编程模式
和之前的模式有什么区别，需要补充什么东西。
:END:
* DONE Write Checklist in long term and short term[10/10]
:NOTE:
当前目的，为了更有效的规划工作，达到最好的效果，方便删减工作，提出重点，提高效率
工作的方法，找出主线，重点，资源，和方法，之后规划步骤，优先级，安排时间，然后执行
 进行规划，评估，效果分析，计划，步骤。
要达到什么样的效果。
期望效果，期望效果原因，优先的级别，按任务的优先级别划分
期望效果同时还要分析困难
困难，为什么觉得困难，困难的重要性
需要的资源和可利用的资源
兵法的使用
很简单，写下重点就可以了，重点就是困难，困难就是重点
:END:
** DONE 每天的工作目标和工作量评估
   CLOSED: [2013-07-27 Sat 21:26]
   - CLOSING NOTE [2013-07-27 Sat 21:26] \\
     finish
*** 简化工作任务，根据每天的大致工作单位，评估工作
数据挖掘项目
机器学习在线课程
统计学基础
信息学基础
计算机安全
java 编程元素
career cup 题
优先保证数据挖掘项目的任务，之后是机器学习，然后其他
关键是提不起兴趣学习数据挖掘。解决的方法就是尽快开始工作，发掘更多的兴趣点。
简化的方法就是写更为详细的 checklist，边写边理解，同时明确重点和方法。
*** 每天4个工作单位，处理数据挖掘和机器学习，其中机器学习保证一个单元，数据挖掘至少保证3个单元。
*** 写 checklist 就是完成工作。
*** 完成每天工作规划的方法。
根据时间和优先级选择工作，之后从规划表中取出工作；
规划工作，每个工作的规划时间最多一个工作单元；
简化，细化，写出重点，困难和方法，评估后严格执行，遇到困难不能前进的，记录，停止工作，进行评估，然后继续工作
如果工作时间耗尽，进行其他工作，绝对不能延期；
** DONE 长远规划及工作量评估（22天完成评估后的工作）
   CLOSED: [2013-07-25 Thu 22:15]
   - CLOSING NOTE [2013-07-25 Thu 22:15] \\
     finish
*** 目标，困难，困惑，要解决的问题，为什么要达成这个目标：
长远的规划，决定了分项规划的意义
规划总是从一个初始的目标开始，之后开始细化和调整的。
角色的类型：
研究人员，独立的计算机开发人员，适应团队开发的计算机开发人员，掌握个别领域高级技能，知识的专家
核心的技能：
操作系统，计算机安全，数据管理和数据分析，计算机工具的开发（系统工具和数据处理，分析的工具）
系统管理和分析，大型的数据管理和处理系统
为什么要达成这个目标：长期的期望
目标的可行性和困难：
编程能力不足，计算机的使用技能有限，理论知识缺乏，项目实践缺乏，不擅长利用资源，沟通能力差，不容易融入社区
*** 目标的效果和评估方法：（达成什么样，就开始向目标迈进了）：
需要进一步评估，阅读文章，思考问题
目前最主要的问题就是效果的定义和评估方法不明确
*** 重点和重要性：
非常重要，但是不能过于急躁
效果的定义和评估方法不明确
要克服心理障碍，多看东西
*** 资源和资源的使用方法：
需要进一步评估
*** 时间评估，时间安排和方法规划：
需要进行长期的评估
可以设置短期的目标，就是完成下列内容，并且阅读大量的书籍，博客，文章来进行评估
*** 写 Checklist 并且围绕 Checklist 展开工作（22 天完成全部的评估工作）
**** 进行时间估计是为了评估工作量，对工作的密度和质量进行控制，不是真的按这种时间来限制和规划工作
**** 对提出的目标进行细化，先写出来，然后进行细化，比如独立的计算机开发人员，具体是什么（30*4 min）
**** 细化目标之后，对目标的合理性，继承性进行评估，比如操作系统，每个目标的工作量，难度，收获，和信息增益（30*4min）
**** 数据的分析和处理人员，那么是什么数据，要进行怎么样的分析，为什么需要专门的人员，这种人员的价值是什么（30*4min）
**** 个别领域的高级技能，是什么领域，这些领域的技能是什么，重点是什么，将来的需求是多大（30*4min）
**** 进行合理性分析之后，在相关的资源中，开始搜索，这个要写 Checklist 明确要找的内容，如何找，可以google.（30min*4min）
**** 之后搜索计算机领域的提升类书籍，博文，论坛，新闻，网站(30min/day)
**** 或者规划阅读某一本书籍，通读之后，写checklist，明确看书的方法和要收获的内容(30min/day)
**** 完成目标的初步评估之后，再次进行目标的总体评估（60 min）
** DONE statistic 目标及工作量评估（7 天完成评估后的工作）
   CLOSED: [2013-07-25 Thu 11:25]
   - CLOSING NOTE [2013-07-25 Thu 11:25] \\
     finish
*** 目标：
定义出第一层的目标，保证大方向没有问题。
原理和方法都要简单形象地理解，原理都要用例子和实际情况来说明，最好有应用的方法的例子，
接天地线和地气
什么是分布，分布函数的表达式，常见分布函数的式子和大致的现实例子
常见的分布检验方法，使用的条件和使用方法，如何分析结果

*** 效果评估：
对将来的工作有帮助的效果。
理解了分布的概念，能写出文章说明，可以举例说明（含matlab例子最佳），并记录到博客
理解什么是分布的检验，能写出文章说明，可以举出例子说明（含matlab 例子，结合最近的实验），并记录到博客

*** 重点和重要性：
理解概率，概率分布，常见的分布，分布的实际例子，LASAT中的例子，对于理解要处理的数据很重要，因此重点就是理解
概率和分布，这些概念和实际问题的关系，如何帮助我们理解问题，解决问题，得出结论的。
分布的检验是分析问题，区分信息的重要方法，不一定要理解内部的原理，但是要知道什么时候使用什么检验，
检验的结果如何解释和分析，检验的数据有什么先决条件，如何判断这些数据符合条件，之后一定要用例子来说明这种使用。

*** 资源和资源的使用方法：
**** 资源：
All of stastistics
wiki 百科
百度百科
wiki english
google 学术

**** 资源的使用方法：
只看和步骤相关的内容
步骤中，要有期望找到的内容和找到内容的方法，不要盲目找

*** 时间评估，时间安排和方法规划：
先明确自己不懂的部分，之后是懂的部分，然后找出需要首先解决的问题和问题的方法，
资料的使用，就是评估猜测，猜想和个人理解，而不是简单的搜索和阅读。
一定要首先有猜想，有一个期望，之后才是设计步骤。
先自己写checklist，拆分知识点和小困难，必要的部分，这个过程其实就已经是工作的部分了
起点要简单，一旦觉得可以写了，有很多东西可以写出来说出来，知道怎么做了，计划就好了，全部写下来，开始执行
*** 写 Checklist 并且围绕 Checklist 展开工作(200min = 30min/7day)
**** 完成全部的工作评估(30 min)
**** 写出大致的 idea 版本的 checklist，这个是之后细节工作的把关(30 min)
**** 完成详细的checklist,对以下的内容进行细化(30min)
只是进行工作重点的评估，之后要进行更为详细的checklist
**** 概率分布的不理解的地方和目前的理解（分布的概念和分布的理解）(10 min)
**** 自己写出常见的分布和特点，应用的场合和优点，评估那些知道的足够了，那些不够，为什么要知道 (10 min)
**** 制定如何使用资源来补充自己的想法，要得到什么样的补充 (10min)
**** 休息(10 min)
**** 什么是分布的检验，要如何检验之前的分布，分布有那些特征，这些特征要如何检验，举例说明(10 min)
**** 制定如何使用资源来补充自己的想法，要得到什么样的补充(10min)
**** 休息(10min)
**** 找到相关资源，补充想法(10min)
**** 结合之前的LASAT的例子，说明概率分布的使用，和使用的方法(10 min)
**** 对未来使用提出一些新的想法，和其他工作的结合，因为学习概率论的目的是为了支持机器学习(10min)
**** 概率论和技巧学习，数据挖掘的关系，可以开始学术性质的研究了(10min)
**** 时间评估，就写在每一项的边上
时间评估的目的，是为了方法安排工作，而不是真的就按这个时间工作了。
是一种对投入时间的估计，方便和其他工作协调。
**** 时间的安排，每天的总的时间，然后就可以分配每天完成哪些工作了。
** DONE Machine learning 目标及工作量评估（23天完成评估后的工作）
   CLOSED: [2013-07-25 Thu 22:37]
   - CLOSING NOTE [2013-07-25 Thu 22:37] \\
     finish
*** 目标：
实际上就是要完成在线课程，ML 的核心知识，重点，能够解决的问题和方法，以及进行一定的实践
目的是为了将来研究中，能够知道需要的概念，方法，工具和思考方法
*** 目标的效果和评估方法：
知道基础概念，有自己的理解，并有博文，能够举例说明，概念的应用场景，用课程中的例子说明即可，不要求新的例子
知道常见的方法，有自己的理解，能分析公式，方法的大致原理，方法的简单例子和实际的例子
能联系当前的项目，并有一定的见解，这个不强求，有就记录下来，也不需要扩展和深入
*** 重点和重要性：
理解原理，概念，大致的分析思路
要举例说明，重点就是复述和自我表述
要理解使用的方法，可以结合作业，但是作业要做好评估
和当前项目的联系，这个不强求，有则记录且不扩展，没有也不强求
*** 资源和资源的使用方法：
ML 视频
Wiki 百科
All of stastistics
写checklist，分析工作，决定要从资源中获取什么，如何获取，获取之后如何处理
*** 时间评估，时间安排和方法规划：
要加快学习，要提升效率就不能傻看，可以回复记笔记的方法，同时订立学习的目标。
*** 写 Checklist 并且围绕 Checklist 展开工作（23天完成）
**** 10 weeks 视频，90 个, 平均15分钟一个。每天30 min，45 天。
**** 要提高效率，跳过一些不必要的内容，同时结合 wiki 等内容，快速完成学习。
**** 先大致分析本周的内容，了解概念，制定计划，快速学习。争取平均一天 1 个小时，其实就是一堂课的时间。
** DONE information theory 目标及工作量评估（30~60min）
   CLOSED: [2013-07-25 Thu 22:47]
   - CLOSING NOTE [2013-07-25 Thu 22:47] \\
     finish
*** 目标，困难，困惑，要解决的问题，为什么要达成这个目标：
加强对未来科研的支持，对 LASAT 项目的支持。完成信息熵的学习就可以了。（40 min）
*** 目标的效果和评估方法：
*** 重点和重要性：
*** 资源和资源的使用方法：
*** 时间评估，时间安排和方法规划：
*** 写 Checklist 并且围绕 Checklist 展开工作
** DONE 数据挖掘工作目标及工作量评估（2h~3h/day）
   CLOSED: [2013-07-25 Thu 23:15]
   - CLOSING NOTE [2013-07-25 Thu 23:15] \\
     finish
*** 目标：
主要就是为了当前的项目，了解目前使用的算法，同时要开始进行一定的研究了。
在教育领域的应用，特别是betty's brian 上的应用。在其他领域的应用。
数据挖掘的目标，方法，存在的问题，这些目前都不了解。不了解这些，就不知道如何推进研究。
研究的目标就是发现行为的差异性，这些差异表现在什么维度，如何找到这种差异。
差异性的行为，应该如何筛选，如何评估和量化这种差异。
差异的时间，空间性质，长期性质
如何分析差异的性质
要适当补充一些教育领域的知识
在研究笔记，checklist 等方面开始全面使用英文，其他的方面也要尽量使用英文。
在明天的（2013.07.26）讨论之后进行全面的分析。
在明天上午完成信息学的任务，统计学的初步任务。
*** 目标的效果和评估方法：
补充统计学和信息学的知识，了解算法的核心原理和思路。
补充一些教育学知识
询问是否要分析相同的研究，当前的研究方法
参与讨论，提出想法，如何改进算法
参与讨论，接受新的想法
讨论算法在其他领域的使用
*** 重点和重要性：
要梳理对 LASAT 项目的认识，其实很简单，但是要梳理
适当了解教育领域的知识
加入项目组的必须
锻炼研究能力和合作研究的能力
论文的阅读，文献查找，分析，研究的跟踪能力
了解数据挖掘，积累数据挖掘知识，方法，思想
不要排斥数据挖掘，了解数据挖掘的强大能力，同时不要认为数据挖掘是唯一的研究重点，研究是全面的
数据挖掘也可以用在很多的地方，是一种思路，不是计算机研究的全部。尽快看完数据挖掘的入门书籍
*** 资源和资源的使用方法：
论文
google 学术
图书馆
要尽快安排这些工作，如何使用这些资源
*** 时间评估，时间安排和方法规划：
每天要安排至少2个小时进行数据挖掘方面的工作，就是4个工作单位
每天全部的工作单位是5小时，就是10个工作单位（最多12个单位，不含休息的时间），要合理安排这些工作单位。
上午4个工作单位，下午2个工作单位，晚上6个工作单位。合理安排这些工作单位，保证全部的工作都有涉及。
像计算机系统一样工作。
一个工作单位是30分钟，然后在单位内部安排小的工作，5分钟是最小的单位，因为30min还是有损耗的。
也就是说，不要30分钟内，不要安排太多执行时间超过5分钟的任务。
*** meeting
继续进行 DSM DTIPS 对比实验，研究信息学理论和统计学
*** 写 Checklist 并且围绕 Checklist 展开工作（每天4~6个工作单位）
**** 什么是数据挖掘，数据挖掘的研究重点，应用价值
针对性地总结，主要是为了进一步的研究想法的提出做支持
**** 进一步的研究思考（目前的困惑，困难，思路，有限的想法）（30 min）
要梳理对 LASAT 项目的认识，其实很简单，只是之前一直没有思考
比如对教育领域不了解，那么无法评估ranking
对统计学掌握不深
是否要完成ML的作业
下一步针对DSM 和 DTIPS 的研究想法（要提出想法，并且细化，按照评估的方法进行分析，找到问题的所在）
** DONE java 目标及工作量评估(2310 min 要提高效率，从 77 天 缩短到一个月，不要陷入细节，了解和把握比较好)
   CLOSED: [2013-07-26 Fri 22:17]
   - CLOSING NOTE [2013-07-26 Fri 22:17] \\
     finish
*** 目标：
支援 LASAT 项目
当做一门面向对象的高级语言来学习
弄明白一点，面向对象的语言和面向过程的语言有什么不同，如何适应这种不同，如何设计小的项目快速熟悉这种不同呢    
*** 目标的效果和评估方法：
如果不知道要学成的目标是什么，就无法制定学习的目标，制定学习的步骤也回存在问题
Java 能干很多事情，计算机的语言并不重要，重要的是思想，但是要了解和掌握一门语言，最关键的就是使用它。
设计的小项目要有更多的内涵，让一个工作单位中的信息增益更大
重要的是掌握思想
源代码的阅读最重要的就是数据流，引用的关系和先后顺序，明白了这个，代码的阅读速度会加快非常多
不要使用，或者少使用emacs 进行java 的学习。尝试了解 Eclipse 的使用。其实最主要的就是各种快捷键的使用。
但是这些都是细枝末节的东西，并不重要。
*** 重点和重要性：
Java 面向的其实不是对象，是程序员
程序员可以非类定义资源，管理资源，并设计过程。简化了很多的思考。
C语言更像是开荒的语言。
C++ Java 更多的是让程序的再次设计更加简单，为此可以牺牲一些东西。
Java 的开发可以更多地用在高级的应用开发。
从面向过程向面向对象的转换：从 main 函数开始。
从面向过程的语言到面向对象的语言，是不是仅仅是对象上的差异，之前过程中是数据流，现在是对象的使用和
对象之间的交互。如果是这样，思想上其实是共通的，没有什么大的差异。现在要想到的只有数据，因为数据必然有内置的
处理方法，之前考虑完数据，还要考虑数据的处理流程。
放下包袱。
基于C 语言，完成对java 的映射学习。
任何程序语言，都必然包含通用的思想，因此不要拘泥于语言和语法。也没有所谓的完全的面向对象和面向过程，其实只是
程序设计的关注点，出发点不同，对数据的管理不同。表现为我们对程序行为的分类，程序结构的理解不同，语言就不同。
程序的行为特征和功能要求，决定了使用的语言。因此就出现了不同的多种语言。但是语言之上，是更抽象的程序思想。
Java 需要学习，但是不是从头学起。那么那些是 java 要学习的呢。
尽快熟悉 JAVA，之后讨论项目
1. 要熟悉使用面向对象的思路，规划程序的结构，流程。（用几个类来实验下就可以了，字符串类，socket 类）
2. 熟悉基本的结构：变量定义，输入输出，循环和判断。目的是了解定义上是否有什么区别，这个可以不编程，看看例子确认下就可以了。看网上的 java example 就可以了。确认这些信息，要比自己查完还要编写方便，看完，用一个大的程序，跑一跑，没有问题就可以了。其实就这么简单。
3. 之后的任务就是在java 的中找到不熟悉的部分，开始学习。先把相同的部分挑出来。类似的地方进行说明。
4. 然后就是高级编程元素的学习。
*** 资源和资源的使用方法：
java example
java Tutorial
要提出想法，java 的学习和编程语言，编程能力，对程序结构的理解分开
理解 java 的各种元素
java 的程序有那些元素，为什么有这些元素，元素的应用场景，举例说明，能够理解的元素就理解，不能理解的说明缺乏相关
的背景和应用场景，不要专门去理解，记住就好了。
理解 java 的元素，和应用场景，使用方法，重要的东西，跑跑例子就可以了，留下可以查阅的资料就可以了。
不要陷入细节。
*** 时间评估，时间安排和方法规划：
很多东西，不要每天安排，根据经验，一个任务要有大致的成果，至少要安排一个工作单位。
*** 写 Checklist 并且围绕 Checklist 展开工作(2310 min，每天30 min 就是 77天，因此要提高效率)
只学必须的东西，入门即可。
**** Java 的基本元素学习
***** 基础变量定义（int, float, array, string, stack 等等）（60 min）
***** 过程控制（if, while, switch,for, try catach 等等）（120 min）
***** 输入输出（In and Out）（30min）
***** 文件读写（30min）
***** 网络通讯（30min）
***** 数据库读写（30min）
***** 多进程，进程间通讯（60min）
***** 数据结构（链表，堆栈，树等）（120*5 min）
***** 常见的类的使用（120 * 3 min）
***** 自己定义类（矩阵，optional）（120 min）
***** 如何对类进行继承（120 min）
***** 了解类，接口，抽象类（120 min）
***** java 和 xml 文件的关系（60 min）
***** 基于 java 的算法设计（源码分析和注释）（120*5 min）
**** 完成之后，再进行其他的设计
Java 
** DONE 编程能力目标及工作量评估
   CLOSED: [2013-07-27 Sat 21:14]
   - CLOSING NOTE [2013-07-27 Sat 21:14] \\
     finish
:NOTE:
编程语言和操作系统，不能傻学，要多看，多思考。
C 能干什么，是继续学习C，还是扩展到C++，objective C
要如何提升自己的编程能力，保证行为的信息提升，不仅仅包含大量的信息，还有信息增益和未来增益
:END:
*** 目标分析：
理解更多的高编程元素，使用伪代码，分析关键元素，积累关键的技术。
源代码管理
高级的库和类的使用
网络，多进程和多线程，内存管理，进程之间的通讯方法
数据库，web，图形界面，开源工具，操作系统，算法的设计与实现，数据结构
图像文件，文本文件，复杂格式的文本处理，自定义类的使用，Java 的基础编程，Java 的高级编程，
开源软件的开发
使用小的实验和项目进行学习。
C 语言适合设计算法，短小的程序，底层的程序，和操作系统相关的程序。
既然 C 适合操作系统和底层，那么就要多看看这方面的内容，比如防火墙之类的。
反向设计实验可能不太好
积累各种基础的小元素，阅读和整理比较重要，要研究一些有深度的方向，比如文件系统，网络安全，算法的设计和实现
对于基础算法，完全没有必要去实现，只有当实践中遇到了问题，才需要进行各种的研究。
陷入重要的，短小的细节。陷入之前，要进行细致的评估。
各种原型系统的分析和构建，不要陷入细节的具体执行中去。
首先进行理论，概念上的整理，之后才是细节。
多了解原型系统。
*** 目标的效果和评估方法：
是用项目评估，还是一个个的小实验。
基于一个个的小实验实现的中型项目。
开源项目，个人项目，LASAT 项目。
黑白棋
效果的期望信息增益的评估
编程能力的提升，主要的就是编程实践。
任何项目都离不开编程元素，因此，进行编程元素的实验，之后再讨论基于这些元素的更高的目标。
理论分析，源代码阅读，整理，伪代码，不要轻易讨论实现。
做到胸有成竹。
考虑对之前的项目进行分析，不是细节，而是设计思想。如果构建一个程序，有什么样的程序结构。
了解编程开发的各种元素，但是不要陷入细节，用简单的概念，例子和使用来理解程序，特别是大型程序。
必然，什么是入侵检测系统，如何设计一个入侵系统，如何构建一个操作系统，操作系统要包含什么，等等。
不要陷入代码的细节，理解各种程序系统的结构，设计思想等等。
找到每个计算机系统的典型系统，理解他们的结构，以及设计的方法。
了解已经有的优秀系统，阅读，使用，熟悉，之后吸取思想，要比独立重新开发要更为关键。
发现资源，管理并分析资源，了解和使用资源，这是编程能力提升最关键的部分。
了解一个系统，并模仿实现。
*** 重点和重要性：
学习多种语言，并了解他们的编程元素，和编程元素的组合。
通过各种 Tutorial 学习，了解实例，并进行知识分类就可以了，没有必要真的去编程，跑跑例子，写下注释，具体的扩展就看
之后的其他应用了，不要追求不高的边际效应。
掌握各种资源，并使用。
不要陷入细节，也不要不分析细节。关键是看这个细节是否重要。
程序设计的思想和结构。
设计各种项目，但是不实现，而是讨论设计的思想，过程的安排，然后评估他们，不要实现。
个人认为，不缺乏编程的能力。
可能缺乏编程的一些高级实践，但是这个不是关键，关键是，不知道要如何去实践这些高级的概念。
*** 资源和资源的使用方法：
阅读源代码，
阅读相关的博客
不要管之前的源代码
阅读资料
了解现有的代码，并阅读
了解重要的代码
理解编程的范式，关键的元素，重要的元素和细节，而不是代码的实现和调试
各种细微的编程细节
源代码的分析能力，是第一位的
可以考虑结合 carecup 的问题
分配刷题，每周安排一次即可，一个月是4题,carecup 可以提醒积累各种编程，算法和程序的元素
*** 时间评估，时间安排和方法规划：
算 careercup 的问题
不要担心实现
看答案之前要自己思考
之后在一亩三分地上找到相关的问题，分析
建设 Github，重要的问题可以放到 google 博客中，可以公开的在Github 中公开
目前使用 github 的条件不成熟，但是可以用来管理源代码
github 适合管理源代码，而不适合管理博客
知道有这个东西就可以了，暂时用不上
可以在后续讨论如何使用，但是目前没有需求，就不要使用了。
所谓的边际效应，目前太小。
*** 写 Checklist 并且围绕 Checklist 展开工作
**** 下载七周七语言
**** 评估制定7周7语言，并制定学习计划
**** 开始 careercup 刷题，并补充相关的知识
**** 制定刷题的规范和方法，进行工作量的评估，步骤的制定，不要盲目开始
**** 观察一亩三分地上的 careercup 活动
**** 用github 记录career cup 的题 
** DONE 计算机安全研究的目标和工作量评估(30min + 30 * 6= 210 min 2 周)
   CLOSED: [2013-07-27 Sat 00:10]
   - CLOSING NOTE [2013-07-27 Sat 00:10] \\
     finish
*** 目标：
计算机安全的研究是一直的目标，要好好进行研究，
编译器后门并没有那么复杂，也没有那么强大的功能，计算机的安全研究是一个很重要的方向。
了解目前的安全问题，了解各个层面的安全问题。
不要陷入实现方面的细节。
按自己的思路进行分析，不要乱看书。
多看书，但是要有选择看，先分析，后规划，然后选择书籍，制定读书计划，阅读，写笔记和总结。
看什么，目标是什么，先看标题，什么可以暂时忽略，什么应该重点看，看得目的是什么，如何看，要收获什么。
先看 Linux 源代码安全指南，看完再说
*** 目标的效果和评估方法：
*** 重点和重要性：
*** 资源和资源的使用方法：
*** 时间评估，时间安排和方法规划：
*** 写 Checklist 并且围绕 Checklist 展开工作
**** 完成书籍的评估（30min）
** DONE 基础科研能力建设目标及工作量评估（30 min 每天，评估为主）
   CLOSED: [2013-07-27 Sat 00:11]
   - CLOSING NOTE [2013-07-27 Sat 00:11] \\
     finish
*** 目标：
利用资源，特别是图书馆资源
利用google
阅读博客
*** 目标的效果和评估方法：
*** 重点和重要性：
*** 资源和资源的使用方法：
*** 时间评估，时间安排和方法规划：
*** 写 Checklist 并且围绕 Checklist 展开工作
